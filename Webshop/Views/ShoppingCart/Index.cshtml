@model IEnumerable<Webshop.Models.OrderItem>

@{
    ViewData["Title"] = "Index";
}

@Html.ActionLink("Back", "Index", "/", null, null)

<table class="table text-center">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Product)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product.Price)
            </th>
        </tr>
    </thead>
    <tbody>

        @{ 
            var x = @ViewBag.orderItemsList;
        }

        @foreach (var item in Model)
        {
            <tr>
                <td class="align-middle">
                    @{
                        var base64 = Convert.ToBase64String(item.Product.Image);
                        var imgSrc = string.Format("data:image.jpg;base64, {0}", base64);
                    }
                    <img src="@imgSrc" style="max-width: 100px; max-height:100px" />
                    <h2 class="align-content-center">@Html.DisplayFor(modelItem => item.Product.Name)</h2>
                </td>
                <td class="align-middle">
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <form asp-action="IncrementProductQuantity" method="post">
                                <input type="hidden" name="id" value="@item.OrderId" />
                                <input type="hidden" name="idPart" value="@item.ProductId" />
                                <input type="submit" value="+" class="btn btn-success btn-sm py-0" />
                            </form>
                        </div>
                        <h4 class="mx-auto">@Html.DisplayFor(modelItem => item.Quantity)</h4>
                        <div class="input-group-append">
                            <form asp-action="DecrementProductQuantity" method="post">
                                <input type="hidden" name="id" value="@item.OrderId" />
                                <input type="hidden" name="idPart" value="@item.ProductId" />
                                <input type="submit" value="-" class="btn btn-danger btn-sm py-0" />
                            </form>
                        </div>
                    </div>
                </td>
                <td class="align-middle">
                    <h2>
                        @CurrencyManager.CalcPrice(item.Product.Price * item.Quantity,
                                     HttpContextAccessor.HttpContext.Session.GetString("currencyRate"))
                    </h2>
                </td>
            </tr>
                        }
    </tbody>
    <tfoot>
        <tr>
            <td class="justify-content-center" colspan="4">
                <h4 class="text-center">
                    Total cost: @CurrencyManager.CalcPrice(Model.Sum(p => p.Product.Price * p.Quantity),
                                    HttpContextAccessor.HttpContext.Session.GetString("currencyRate"))
                    @HttpContextAccessor.HttpContext.Session.GetString("currencyCode")
                </h4>
            </td>
        </tr>
    </tfoot>
</table>
<Span class="float-right mr-2">
    @{ 
        string classNames;
        classNames = @Model.Count() <= 0 ? "btn btn-danger disabled" : "btn btn-success";
    }
    @Html.ActionLink("Confirm Order", "SelectPaymentAndDeliveryOption", "OrderConfirmation", 
    new { totalprice = Math.Round(Model.Sum(p => p.Product.Price * p.Quantity), 2).ToString() }, new { @class = $"btn {classNames}"})
</Span>
